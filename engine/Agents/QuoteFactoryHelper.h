#ifdef _MSC_VER
#pragma warning(disable:4786 4503)
#endif

// This file is autogenerated by TextCoder in the tools folder.

int fillMap()
{
	quoteMap.insert( std::make_pair( std::string("Jq?@aw"), std::string("6%~'aJq;@w'ra~eraM'&S") ) );
	quoteMap.insert( std::make_pair( std::string("Jq?@aw"), std::string("6'M;M[%r'qJw'6'uJq'VaJqwV") ) );
	quoteMap.insert( std::make_pair( std::string("Jq?@aw"), std::string("3pJ[K;q7'~s~L@a'~s~LL@a8888'LLeeer88'~s~L@a8888'r?a888'~s~~~L@@a£") ) );
	quoteMap.insert( std::make_pair( std::string("Jq?@aw"), std::string("5apa%q'J[dr?ap'AT¬rw@a'avKaer;d['cdp'wdso") ) );
	quoteMap.insert( std::make_pair( std::string("Jq?@aw"), std::string("5d:aw'ed:awo") ) );
	quoteMap.insert( std::make_pair( std::string("Jq?@aw"), std::string("\\?;q';q'u?apa'6'qrJpr'q?psbb;[b8'E?apa%q'3pJ[K;q£") ) );
	quoteMap.insert( std::make_pair( std::string("Jq?@aw"), std::string("\\?;q'q?ds@M[%r'?Jeea['J[M'q;[Ka'6%ta'qaa[';r7'6'~sqr'La':;@@aM8") ) );
	quoteMap.insert( std::make_pair( std::string("Jq?@aw"), std::string("E?Jr'Mdaq'r?;q'J[r;T;[caKr;d['qepJw'pa~;[M'wds'dc£") ) );
	quoteMap.insert( std::make_pair( std::string("Jq?@aw"), std::string("]d?'?d:apw'ed:apwo") ) );
	quoteMap.insert( std::make_pair( std::string("[Jr?J["), std::string("6'@;:a'J'bddM'rJqra'dc']@M'{aKs@;ap8") ) );
	quoteMap.insert( std::make_pair( std::string("[Jeaq"), std::string(".d'udpp;aq'~Jrao") ) );
	quoteMap.insert( std::make_pair( std::string("[Jeaq"), std::string("E?dd5J?o") ) );
	quoteMap.insert( std::make_pair( std::string("#d['q:sqa"), std::string("yq?@aw7'r?;q';q'J'~d[qrap'r?Jr'aJrq'.au' aJ@J[Mapq8") ) );
	quoteMap.insert( std::make_pair( std::string("#d['q:sqa"), std::string("y@@'.au' aJ@J[Mapq'Jpa'r?a'qJ~a7'yq?@aw8") ) );
	quoteMap.insert( std::make_pair( std::string("pdLapr"), std::string("6'#sqr'Md'e?wq;Kq7'd:Jw£o") ) );
	quoteMap.insert( std::make_pair( std::string("pdLapr"), std::string("zJcccccdddddd[") ) );
	quoteMap.insert( std::make_pair( std::string("pdLapr"), std::string("6r%q';['ApaJrspa'{?wq;Kq8") ) );
	quoteMap.insert( std::make_pair( std::string("pdLapr"), std::string("|q;[b'r?a'~aM;s~'dc8888") ) );
	quoteMap.insert( std::make_pair( std::string("pdLapr"), std::string("|q;[b'r?a'~aM;s~'dc'c;[bapq'rdsK?;[b'r?a':awLdJpM7'6'u;@@'[du'Jrra~er'rd'c;v'r?;q'epdL@a~'u;r?'?J[M'?d@M;[b8") ) );
	quoteMap.insert( std::make_pair( std::string("pdLapr"), std::string("5du'~J[w'r;~aq'Md'6'?Jta'rd'qJw'r?;q&'r?a'Jba[r'Kds[r'~sqr'Kd~a'Mdu[o") ) );
	quoteMap.insert( std::make_pair( std::string("MJ[;a@"), std::string("6r%q'J@@'eJ[rq'6'ra@@'wdso") ) );
	quoteMap.insert( std::make_pair( std::string("MJ[;a@"), std::string("6%~'#sqr'J['dMMLJ@@'epdbpJ~~ap") ) );
	quoteMap.insert( std::make_pair( std::string("MJ[;a@"), std::string("][Ka'~dpa7'J'KJ@@'cdp'r?a~7'ua%pa'barr;[b'J'bddM'@;qr'rdbar?ap888',dpa'6'ra@@'wds7'~dpa88888") ) );
	quoteMap.insert( std::make_pair( std::string("MJ[;a@"), std::string("¬a[M'~a'qd~a'~dpa'fsdraqo") ) );
	quoteMap.insert( std::make_pair( std::string("MJ[;a@"), std::string("6c'r?aw'Jpa'@d[bap'r?J['KJ['c;r';['r?a'qeaaK?'LsLL@a7'r?a['6'J~'bd;[b'rd'[aaM'J['Jba[r8") ) );
	quoteMap.insert( std::make_pair( std::string("MJ[;a@"), std::string(",~~~~'+d[b'6q@J[M'6KaM'\\aJq8") ) );
	quoteMap.insert( std::make_pair( std::string("cpJ[K;q"), std::string("C~'cdd'L;LL@a'qeJKa") ) );
	quoteMap.insert( std::make_pair( std::string("cpJ[K;q"), std::string("3@aaaaaaa") ) );
	quoteMap.insert( std::make_pair( std::string("cpJ[K;q"), std::string("]ddd:") ) );
	quoteMap.insert( std::make_pair( std::string("cpJ[K;q"), std::string("zde'rJ[J[J") ) );
	quoteMap.insert( std::make_pair( std::string("cpJ[K;q"), std::string("¬dppw'yq?@aw7'6'KJ[%r'?aJp'wdso") ) );
	quoteMap.insert( std::make_pair( std::string("LJp[aw"), std::string("Gae7't;d@a[r@w's[?Jeew8") ) );
	quoteMap.insert( std::make_pair( std::string("LJp[aw"), std::string("6'Md[%r'sqa'[dp[q7'avKaer'rd'raqr'~w'[dp[':;@@ap") ) );
	quoteMap.insert( std::make_pair( std::string("LJp[aw"), std::string("Gds'Kds@M[%r'avepaqq'?du'J[[dwaM'6'J~'u;r?'¬?aae';['udpMq") ) );
	quoteMap.insert( std::make_pair( std::string("rdLw"), std::string("\\?Jr%q'J'LarJ'qrdeeap") ) );
	quoteMap.insert( std::make_pair( std::string("rdLw"), std::string("]?'waqo") ) );
	quoteMap.insert( std::make_pair( std::string("rdLw"), std::string("¬seappppLo") ) );
	quoteMap.insert( std::make_pair( std::string("rdLw"), std::string("_aae'wdsp'~;[M'dea[7'Lsr'[dr'qd'dea['r?Jr'wdsp'LpJ;[q'cJ@@'dsr8") ) );
	quoteMap.insert( std::make_pair( std::string("rdLw"), std::string("CvKappa[r") ) );
	quoteMap.insert( std::make_pair( std::string("rdLw"), std::string("zJppwrJqr;Ko") ) );
	quoteMap.insert( std::make_pair( std::string("rdLw"), std::string(".[[[waqqo") ) );
	quoteMap.insert( std::make_pair( std::string("rdLw"), std::string(",sp:w'zsK:arq'J[M'¬;@tap'{@Jraq") ) );
	quoteMap.insert( std::make_pair( std::string("rdLw"), std::string("¬rde'udppw;[b7'yq?@aw8") ) );
	quoteMap.insert( std::make_pair( std::string("rdLw"), std::string("6r'?Jq'rd'La'qJ;M8") ) );
	quoteMap.insert( std::make_pair( std::string("~Jp:"), std::string("EJwdd'uJ[%'?s?£") ) );
	quoteMap.insert( std::make_pair( std::string("Kap;"), std::string("udx'?apa") ) );
	quoteMap.insert( std::make_pair( std::string("J@;~J"), std::string("]ddddddd?") ) );
	quoteMap.insert( std::make_pair( std::string("?a@a["), std::string("Ea'?Jta'rd'?Jta'N;r%q'+;ca'=;~7'Lsr'[dr'Jq'ua':[du';rN'Jq'J'L;d@db;qr'fsdra£") ) );
	quoteMap.insert( std::make_pair( std::string("J@;b"), std::string(",a'Md[%r':[du'u?Jr'bd;[b'd['%apa8") ) );
	quoteMap.insert( std::make_pair( std::string("J@;b"), std::string("E?d'La'M;q'K?aa:w'@;K:@a'@JMw£") ) );
	quoteMap.insert( std::make_pair( std::string("@Juwapq"), std::string(".du'MdKrdp7';q[%r';r'rpsa'r?Jr'u?a['J'eapqd['M;aq';['?;q'q@aae7'?a'Mdaq[%r':[du'JLdsr';r's[r;@'r?a'[avr'~dp[;[b£") ) );
	quoteMap.insert( std::make_pair( std::string("@Juwapq"), std::string("\\?a'wds[baqr'qd[7'r?a'rua[rwTwaJp'd@M7'?du'd@M';q'?a£") ) );
	quoteMap.insert( std::make_pair( std::string("@Juwapq"), std::string("Eapa'wds'epaqa[r'u?a['wdsp'e;Krspa'uJq'rJ:a[£") ) );
	quoteMap.insert( std::make_pair( std::string("@Juwapq"), std::string("EJq';r'wds'dp'wdsp'wds[bap'Lpdr?ap'u?d'uJq':;@@aM';['r?a'uJp£") ) );
	quoteMap.insert( std::make_pair( std::string("@Juwapq"), std::string("B;M'?a':;@@'wds£") ) );
	quoteMap.insert( std::make_pair( std::string("@Juwapq"), std::string("5du'cJp'JeJpr'uapa'r?a'ta?;K@aq'Jr'r?a'r;~a'dc'r?a'Kd@@;q;d[£") ) );
	quoteMap.insert( std::make_pair( std::string("@Juwapq"), std::string("Gds'uapa'r?apa's[r;@'r?a'r;~a'wds'@acr7';q'r?Jr'rpsa£") ) );
	quoteMap.insert( std::make_pair( std::string("@Juwapq"), std::string("5du'~J[w'r;~aq'?Jta'wds'Kd~~;rraM'qs;K;Ma£") ) );
	quoteMap.insert( std::make_pair( std::string("@Juwapq"), std::string("ypa'wds'fsJ@;c;aM'rd'b;ta'J'sp;[a'qJ~e@a£") ) );
	quoteMap.insert( std::make_pair( std::string("MJta"), std::string(",~~~~'#a@@w'LaJ[qo") ) );
	quoteMap.insert( std::make_pair( std::string("MJta"), std::string("5Jta'wds'bdr'gHe'cdp'qd~a'#a@@w'LaJ[q£o") ) );
	quoteMap.insert( std::make_pair( std::string("La['bd[q?Ju"), std::string("6'Bd[%r'Md'¬JrspMJwqo") ) );
	quoteMap.insert( std::make_pair( std::string("MdLLq"), std::string("y@@pp;;;bb???rrwwo") ) );
	quoteMap.insert( std::make_pair( std::string("MdLLq"), std::string("6%@@'La';['rdsK?'@Jrap888") ) );
	quoteMap.insert( std::make_pair( std::string("d@@;a"), std::string("ApJK:ap#JK:'r;~;[b'Ldw") ) );
	quoteMap.insert( std::make_pair( std::string("r?JMc"), std::string("6%~'[dr'JppdbJ[r7'6%~'p;b?r8") ) );
	quoteMap.insert( std::make_pair( std::string("#J:a"), std::string("\\pJKrdpo") ) );
	quoteMap.insert( std::make_pair( std::string("#J:a"), std::string("y'\\pJKrdp£") ) );
	quoteMap.insert( std::make_pair( std::string("#J:a"), std::string("\\uJKrdp£") ) );
	quoteMap.insert( std::make_pair( std::string("rd~'u;rq"), std::string(".atap'Kds@M'qrJ[M'r?Jr'MJ~[aM'Mdb") ) );
	quoteMap.insert( std::make_pair( std::string("rd~'uJ;rq"), std::string("E?Jr%q'?a'Ls;@M;[b';['r?apa£") ) );
	quoteMap.insert( std::make_pair( std::string("wJ:"), std::string("+@J~J%q'Jpa'@dta@w") ) );
	quoteMap.insert( std::make_pair( std::string("L@s[r~J['J[M'K?pd[;K"), std::string("¬[;rK?w7'[;rK?w'[dd[K?aqo") ) );
	quoteMap.insert( std::make_pair( std::string("ua;pM'pdqa"), std::string("y['s[sqsJ@'tJp;J[r'dc'r?a'u;@M'pdqa7'r?;q'e@J[r';q';[capr;@a'Lw'J@@'[dp~J@'paepdMsKr;ta'~ar?dMq8''6[qraJM7'sed['paJK?;[b'[dp~J@'paepdMsKr;ta'Jba7';r'LsMq'J'bJpMa[ap8''\\?;q'tJqr'e?wq;d@db;KJ@'MpJ;[7';[K@sM;[b'epdMsKr;d['dc'ua@@;[brd['Lddrq7'rpdua@q'J[M'qaKJraspq7';q'aqqa[r;J@'cdp';r'rd'LpaaM8''\\?a'bJpM[ap'r?a['rJ:aq'J'Ksrr;[b'dcc'r?a'ua;pM'pdqa7'uJ@:q'dcc'rd'c;[M'J'u;@M'pdqa7'J[M'bpJcrq'r?a'ua;pM'pdqa'd[rd'r?a'u;@M'pdqa8''y[M'qd'J[dr?ap'ba[apJr;d[';q'Ldp[8") ) );
	quoteMap.insert( std::make_pair( std::string("M~J"), std::string("Bdaq[%r',aJ['y[wr?;[b") ) );
	quoteMap.insert( std::make_pair( std::string("~dMa@cdpM"), std::string("{derJqr;K") ) );
	quoteMap.insert( std::make_pair( std::string("b;@@;J~"), std::string("\\appw") ) );
	quoteMap.insert( std::make_pair( std::string("fs;@rw"), std::string("Gds'?Jta'J'tapw';[rapaqr;[b'cJKa") ) );
	quoteMap.insert( std::make_pair( std::string("?Jpr~J["), std::string("Bd'wds'~Jbbdrq's[MapqrJ[M'~a£") ) );
	quoteMap.insert( std::make_pair( std::string("Ms:a"), std::string("\\?a'edqq;L;@;rw'dc'e?wq;KJ@'J[M'~a[rJ@'Kd@@Jeqa';q'avrpa~a@w'paJ@8") ) );
	quoteMap.insert( std::make_pair( std::string("LJrrw"), std::string("\\?Jr%q'r?a'qe;p;ro") ) );
	quoteMap.insert( std::make_pair( std::string("J@av"), std::string("\\?aw'KspaM'~a'J@p;b?r") ) );
	quoteMap.insert( std::make_pair( std::string("Ldu~J["), std::string("]ea['r?a'edM'LJw'Mddpq'5y+8") ) );
	quoteMap.insert( std::make_pair( std::string("#JK:"), std::string("Ea[Mw7'b;ta'~a'r?a'LJr8") ) );
	quoteMap.insert( std::make_pair( std::string(":sLp;K:"), std::string("5J;@'r?a'@Jra'bpaJr'¬_8") ) );
	quoteMap.insert( std::make_pair( std::string("?J@nHHH"), std::string("ypa'wds'fs;ra'qspa£") ) );
	quoteMap.insert( std::make_pair( std::string("LdL"), std::string("6q';r'b;pd'MJw£") ) );
	quoteMap.insert( std::make_pair( std::string("cpJ[:'xJeeJ"), std::string(";c'ua'KJ[%r'La'cpaa'Jr'@aJqr'@ar%q'La'K?aJe") ) );
	quoteMap.insert( std::make_pair( std::string("rJd'ra'K?;[b"), std::string("6r';q'[dr'r?a'K@Jw'r?a'edrrap'r?pduq7'u?;K?'b;taq'r?a'edr';rq'sqacs@[aqq7¦Lsr'r?a'qeJKa'u;r?;['r?a'q?Jea7'cpd~'u?;K?'r?a'edr';q'~JMa8¦E;r?dsr'J'Mddp7'r?a'pdd~'KJ[[dr'La'a[rapaM7'J[M'u;r?dsr'u;[Mduq';r';q'MJp:8¦¬sK?';q'r?a'sr;@;rw'dc'[d[Tav;qra[Ka8") ) );
	quoteMap.insert( std::make_pair( std::string("rJd'ra'K?;[b"), std::string("\\?a'qJba'aveap;a[Kaq'u;r?dsr'JLqrpJKr;d[7¦y[M'JKKd~e@;q?aq'u;r?dsr'JKr;d[$¦5a'JKKaerq'r?a'aLL'J[M'c@du'dc'r?;[bq7¦.sprspaq'r?a~7'Lsr'Mdaq'[dr'du['r?a~7¦y[M'@;taq7'Lsr'Mdaq'[dr'Mua@@8") ) );
	quoteMap.insert( std::make_pair( std::string("rJd'ra'K?;[b"), std::string("\\?a'J[K;a[rq'qJ;M7'NyKKaer'J[M'wds'LaKd~a'u?d@aN7¦][Ka'u?d@a7'r?a'udp@M';q'Jq'wdsp'?d~a8") ) );
	quoteMap.insert( std::make_pair( std::string("rJd'ra'K?;[b"), std::string("\\?a'udp@M';q'q?JeaM'Lw'r?a'EJw$¦6r'KJ[[dr'La'q?JeaM'Lw'r?a'qa@c8¦\\pw;[b'rd'K?J[ba';r7'wds'MJ~Jba';r$¦\\pw;[b'rd'edqqaqq';r7'wds'@dqa';r8") ) );
	quoteMap.insert( std::make_pair( std::string("rJd'ra'K?;[b"), std::string("E?d's[MapqrJ[Mq'Mdaq'[dr'epaJK?$'E?d'epaJK?aq'Mdaq'[dr's[MapqrJ[M8") ) );
	quoteMap.insert( std::make_pair( std::string("dvcJ~"), std::string("4;ta'J'~J['J'c;q?'J[M'wds'caaM'?;~'cdp'J'MJw8'\\aJK?'J'~J['rd'c;q?'J[M'wds'caaM'?;~'cdp'J'@;car;~a8") ) );
	quoteMap.insert( std::make_pair( std::string("?'b'ua@@q"), std::string("E?a['6'qaa'J['JMs@r'd['J'L;KwK@a7'6'Md'[dr'MaqeJ;p'cdp'r?a'csrspa'dc'r?a'?s~J['pJKa8") ) );
	quoteMap.insert( std::make_pair( std::string("u?w';q'r?a'udp@M'pds[M£"), std::string("<<<") ) );
	quoteMap.insert( std::make_pair( std::string("u?w';q'r?a'udp@M'c@Jr£"), std::string("^^^") ) );
	quoteMap.insert( std::make_pair( std::string("Ep6r\\a.'6['~6vCM'Kye6ry@¬"), std::string("6%~'qspa'wds'q?ds@M[%r'La'JL@a'rd'paJM'r?;q888'Lsr'ua@@'MaKdMaMo") ) );
	return 0;
}

